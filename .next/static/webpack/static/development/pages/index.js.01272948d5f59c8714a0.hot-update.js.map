{"version":3,"file":"static/webpack/static/development/pages/index.js.01272948d5f59c8714a0.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport TodoItem from '../components/todoitem.js';\nimport Input from '@material-ui/core/Input';\nimport Grid from '@material-ui/core/Grid';\n\nexport default class Index extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      value: ''\n    }\n  }\n  componentDidMount() {\n    if (!localStorage.getItem('todoItems')) {\n      localStorage.setItem('todoItems', '[]');\n    }\n    if (!localStorage.getItem('completedItems')) {\n      localStorage.setItem('completedItems', '[]');\n    }\n     const todoItems = JSON.parse(localStorage.getItem('todoItems'));\n     const completedItems = JSON.parse(localStorage.getItem('completedItems'));\n     this.setState({ todoItems, completedItems });\n  }\n\n  onClick = (event) => {\n    this.setState({ value: event.target.value });\n  }\n\n  submit = () => {\n    var todos = JSON.parse(localStorage.getItem('todoItems'));\n    if (this.state.value) {\n      const id = this.state.todoItems.length + 1;\n      const valueObj = { name: this.state.value, id, done: false };\n      todos.push(valueObj);\n      localStorage.setItem('todoItems', JSON.stringify(todos));\n      this.setState({ value: '', emptyError: false, todoItems: todos });\n    } else {\n      this.setState({ emptyError: true })\n    }\n  }\n  renderTodoItems = () => {\n    const items = this.state.todoItems.map((item) => {\n      return (\n        <TodoItem item={item} deleteItem={this.deleteItem} onChange={this.checkboxOnChange} nocheckMark/>\n      )\n    })\n\n    return items;\n  }\n\n  renderCompletedItems = () => {\n    if (this.state.completedItems.length > 0) {\n      const style= { display: 'flex', flex: 1, flexDirection: 'row' };\n      const items = this.state.completedItems.map((item) => {\n        return (\n          <TodoItem class={style} item={item} deleteItem={this.deleteItem} onChange={this.checkboxOnChange}/>\n        )\n      })\n      return items; \n    } else if (this.state.completedItems.length === 0 && this.state.todoItems.length > 0){\n      return (<Typography>Complete a task in your todo list. YOU CAN DO IT!</Typography>);\n    }\n       \n  }\n\n  deleteItem = (item) => {\n    const newTodoItems = JSON.parse(JSON.stringify(this.state.todoItems));\n    const id = newTodoItems.findIndex(i => i.id === item.id);\n    const newState = {};\n    if (id >= 0) {\n      newTodoItems.splice(id, 1);\n      newState.todoItems = newTodoItems;\n    } else {\n      const completed = JSON.parse(JSON.stringify(this.state.completedItems));\n      const id2 = completed.findIndex(i => i.id === item.id);\n      if (id2 >= 0) {\n        completed.splice(id2, 1);\n        newState.completedItems = completed;\n      }\n    }\n    this.setState(newState, () => {\n      localStorage.setItem('todoItems', JSON.stringify(newTodoItems));\n    });\n  }\n  checkboxOnChange = (event, checked) => {\n    const index = this.state.todoItems.findIndex(i => i.id === parseInt(event.target.value, 10));\n    const todos = JSON.parse(JSON.stringify(this.state.todoItems));\n    const completed = JSON.parse(JSON.stringify(this.state.completedItems));\n    todos[index].done = checked;\n    completed.push(todos[index]);\n    todos.splice(index, 1);\n    this.setState({ todoItems: todos, completedItems: completed }, () => {\n      localStorage.setItem('todoItems', JSON.stringify(this.state.todoItems));\n      localStorage.setItem('completedItems', JSON.stringify(this.state.completedItems));\n\n    });\n  }\n\n  render() {\n    return (\n      <Container maxWidth=\"sm\">\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          Todo List\n        </Typography>\n        <Input placeholder={'enter an action item here'} style={{ width: 400, height: 25 }} onChange={this.onClick} type=\"input\" value={this.state.value}/>\n        <Button variant=\"contained\" color=\"primary\" onClick={this.submit}>\n          submit todo item\n        </Button>\n        {this.state.emptyError &&\n        <div style={{ color: 'red' }}>please enter an todo item before hitting submit</div>\n        }\n        <div style={{ display: 'flex', flex: 1, flexDirection: 'row' }}>\n        {this.state.todoItems && \n          <Grid item xs={12} md={6}>\n            <Typography variant=\"h6\">\n              TO DO LIST       \n            </Typography>\n            {this.renderTodoItems()}\n          </Grid>\n        }\n        {this.state.completedItems && \n          <Grid item xs={12} md={6}>\n          <Typography variant=\"h6\">\n            COMPLETED TO DO LIST       \n          </Typography>\n          {this.renderCompletedItems()}\n        </Grid>\n        }\n        </div>\n      </Container>\n    )\n  }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAmBA;AAAA;AAAA;AACA;AACA;AArBA;AAuBA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAlCA;AAmCA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AA3CA;AA6CA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AA1DA;AA4DA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AA9EA;AA+EA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAzFA;AACA;AADA;AAFA;AAKA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;;AA4EA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;AA9HA;AACA;;;;;A","sourceRoot":""}