{"version":3,"file":"static/webpack/static/development/pages/index.js.b2b0b6204fbbaf421d3b.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport TodoItem from '../components/todoitem.js';\n\nexport default class Index extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      value: '',\n      todoItems: []\n    }\n  }\n  componentDidMount() {\n    if (!localStorage.getItem('todoItems')) {\n      localStorage.setItem('todoItems', '[]');\n    }\n     const todoItems = localStorage.getItem('todoItems')\n     this.setState({ todoItems: JSON.parse(todoItems) });\n  }\n\n  onClick = (event) => {\n    this.setState({ value: event.target.value });\n  }\n\n  submit = () => {\n    var todos = JSON.parse(localStorage.getItem('todoItems'));\n    if (this.state.value) {\n      const id = this.state.todoItems.length + 1;\n      const valueObj = { name: this.state.value, id, done: false };\n      todos.push(valueObj);\n      localStorage.setItem('todoItems', JSON.stringify(todos));\n      this.setState({ value: '', emptyError: false, todoItems: todos });\n    } else {\n      this.setState({ emptyError: true })\n    }\n  }\n  renderItems = () => {\n    const items = this.state.todoItems.map((item) => {\n      // const todo = JSON.parse(item);\n      return (\n        <TodoItem item={item} deleteItem={this.deleteItem}/>\n      )\n    })\n\n    return items;\n  }\n\n  deleteItem = (item) => {\n    localStorage.removeItem('todoItems');\n    localStorage.setItem('todoItems', '[]');\n    const newTodoItems = JSON.parse(JSON.stringify(this.state.todoItems));\n    const id = newTodoItems.findIndex(i => i.id === item.id);\n    newTodoItems.splice(id, 1);\n    this.setState({ todoItems: newTodoItems }, () => {\n      localStorage.setItem('todoItems', JSON.stringify(newTodoItems));\n    });\n  }\n  checkboxOnChange = (event, checked) => {\n    console.log(`EVENT: ${event}`);\n    console.log(`CHECKED: ${checked}`);\n  }\n\n  render() {\n    return (\n      <Container maxWidth=\"sm\">\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          Todo List\n        </Typography>        <input placeholder={'enter an action item here'} style={{ width: 400, height: 25 }} onChange={this.onClick} type=\"input\" value={this.state.value}/>\n        <Button variant=\"contained\" color=\"primary\" onClick={this.submit}>\n          submit todo item\n        </Button>\n        {this.state.emptyError &&\n        <div style={{ color: 'red' }}>please enter an todo item before hitting submit</div>\n        }\n        <div>\n        {this.state.todoItems && this.renderItems()}\n        </div>\n      </Container>\n    )\n  }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAgBA;AAAA;AAAA;AACA;AACA;AAlBA;AAoBA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AA/BA;AAgCA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAzCA;AA2CA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AApDA;AAqDA;AACA;AACA;AACA;AAtDA;AACA;AACA;AAFA;AAFA;AAMA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;;;AA4CA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AA3EA;AACA;;;;;A","sourceRoot":""}